AWSTemplateFormatVersion: "2010-09-09"
Description: Simple cloud formation for bucket creation and configuration

Parameters:
  # s3
  BucketName:
    Type: String
    Default: dophermal-container-log-dumps
  # sqs
  DelaySeconds:
    Type: Number
    Default: 5
  MaximumMessageSize:
    Type: Number
    Default: 51200 # 50KB
  MessageRetentionPeriod:
    Type: Number
    Default: 86400 # 1 Day
  ReceiveMessageWaitTimeSeconds:
    Type: Number
    Default: 20
  # ec2
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/al2023-ami-minimal-kernel-default-x86_64'
  PEMKey:
    Type: String
    Default: dophermal
    Description: enter PEM key-value pair to attach
  InstanceName:
    Type: String
    Default: dophermal-docker-host
    Description: instance name, this is used in API to get public DNS

Resources:
  # s3
  MainBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Ref BucketName
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
  
  # sqs
  # used to command controller
  # "services/controller" is listener
  ControllerQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: ControllerQueue
      DelaySeconds: !Ref DelaySeconds
      MaximumMessageSize: !Ref MaximumMessageSize
      MessageRetentionPeriod: !Ref MessageRetentionPeriod
      ReceiveMessageWaitTimeSeconds: !Ref ReceiveMessageWaitTimeSeconds

  # notify container status and metadata
  # "servies/api" is listener
  StatusQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: StatusQueue
      DelaySeconds: !Ref DelaySeconds
      MaximumMessageSize: !Ref MaximumMessageSize
      MessageRetentionPeriod: !Ref MessageRetentionPeriod
      ReceiveMessageWaitTimeSeconds: !Ref ReceiveMessageWaitTimeSeconds
  
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref LatestAmiId
      InstanceType: t2.micro
      KeyName: !Ref PEMKey
      UserData: !Base64 |
          #!/bin/bash
          sudo yum update -y
          sudo yum install -y docker
          # sudo service docker start
          sudo usermod -a -G docker ec2-user
          echo '{ "hosts": [ "tcp://0.0.0.0:2375", "unix:///var/run/docker.sock" ] }' | sudo tee /etc/docker/daemon.json
          sudo mkdir ~/logs
          sudo dockerd --debug &> ~/logs/$(date +"%Y-%m-%d_%H-%M-%S").log &
      SecurityGroups:
        - !Ref 'EC2SecurityGroup'
      Tags:
        - Key: Name
          Value: !Ref InstanceName
  # TODO: update security group
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow all inbound and outbound traffic
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        IpProtocol: "-1"