stages:
  - deploy
  - build-and-lint

build-and-lint-ui:
  tags:
    - dalfcs_gitlab_docker_ci
  stage: build-and-lint
  image: node:21.7.1
  before_script:
    - corepack enable
    - corepack prepare pnpm@latest-8 --activate
    - pnpm config set store-dir .pnpm-store
  script:
    - cd services/ui
    - pnpm install
    - pnpm lint
    - pnpm build
  cache:
    key:
      files:
        - pnpm-lock.yaml
    paths:
      - .pnpm-store
  only:
    changes:
      - services/ui/**

build-and-lint-api:
  tags:
    - dalfcs_gitlab_docker_ci
  stage: build-and-lint
  image: node:21.7.1
  before_script:
    - corepack enable
    - corepack prepare pnpm@latest-8 --activate
    - pnpm config set store-dir .pnpm-store
  script:
    - cd services/api
    - pnpm install
    - pnpm lint
    - pnpm build
  cache:
    key:
      files:
        - pnpm-lock.yaml
    paths:
      - .pnpm-store
  only:
    changes:
      - services/api/**

build-controller:
  tags:
    - dalfcs_gitlab_docker_ci
  stage: build-and-lint
  image: golang:latest
  script:
    - make build-controller
  only:
    changes:
      - services/controller/**

deploy-ui-image:
  tags:
    - dalfcs_gitlab_docker_ci
  services:
    - name: docker:dind
      entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]
  stage: deploy
  image: docker:cli
  variables:
    DOCKER_IMAGE_NAME: $CI_REGISTRY_UI_IMAGE:$CI_COMMIT_REF_SLUG
    DOCKER_HOST: tcp://127.0.0.1:2375
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$DOCKER_IMAGE_NAME" services/ui
    - docker push "$DOCKER_IMAGE_NAME"
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        docker tag "$DOCKER_IMAGE_NAME" "$CI_REGISTRY_IMAGE:latest"
        docker push "$CI_REGISTRY_UI_IMAGE:latest"
      fi
  only:
    changes:
      - services/ui/**

deploy-api-image:
  tags:
    - dalfcs_gitlab_docker_ci
  services:
    - name: docker:dind
      entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]
  stage: deploy
  image: docker:cli
  variables:
    DOCKER_IMAGE_NAME: $CI_REGISTRY_API_IMAGE:$CI_COMMIT_REF_SLUG
    DOCKER_HOST: tcp://127.0.0.1:2375
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$DOCKER_IMAGE_NAME" services/api
    - docker push "$DOCKER_IMAGE_NAME"
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        docker tag "$DOCKER_IMAGE_NAME" "$CI_REGISTRY_IMAGE:latest"
        docker push "$CI_REGISTRY_API_IMAGE:latest"
      fi
  only:
    changes:
      - services/api/**

deploy-controller-image:
  tags:
    - dalfcs_gitlab_docker_ci
  services:
    - name: docker:dind
      entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]
  stage: deploy
  image: docker:cli
  variables:
    DOCKER_IMAGE_NAME: $CI_REGISTRY_CONTROLLER_IMAGE:$CI_COMMIT_REF_SLUG
    DOCKER_HOST: tcp://127.0.0.1:2375
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build -t "$DOCKER_IMAGE_NAME" services/controller
    - docker push "$DOCKER_IMAGE_NAME"
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        docker tag "$DOCKER_IMAGE_NAME" "$CI_REGISTRY_IMAGE:latest"
        docker push "$CI_REGISTRY_CONTROLLER_IMAGE:latest"
      fi
  only:
    changes:
      - services/controller/**
